basePath: /api/v1
definitions:
  api.ErrorResponse:
    properties:
      details:
        type: string
      error:
        type: string
    type: object
  getmecontroller.UserResponse:
    properties:
      displayName:
        type: string
      email:
        type: string
      id:
        type: integer
      username:
        type: string
    type: object
  signupcontroller.SignUpRequest:
    properties:
      displayName:
        type: string
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - displayName
    - email
    - password
    - username
    type: object
  signupcontroller.SignUpResponse:
    properties:
      token:
        type: string
      userId:
        type: integer
    type: object
  statuscontroller.StatusResponse:
    properties:
      buildDate:
        type: string
      commit:
        type: string
      version:
        type: string
    type: object
info:
  contact: {}
  description: Sample microservice.
  title: Sample microservice API
paths:
  /auth/me:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/getmecontroller.UserResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get user info
      tags:
      - Auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      parameters:
      - description: Sign up request
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/signupcontroller.SignUpRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/signupcontroller.SignUpResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Sign up user
      tags:
      - Auth
  /internal/status:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/statuscontroller.StatusResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Get status
      tags:
      - Internal
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
